#!/bin/bash

# clean::docker cleans docker images and containers
# reference: https://note.qidong.name/2017/06/26/docker-clean/
clean::docker() {
  if [ "$(os::has_command docker)" != "true" ]; then
    log::info "[$(timestamp)][clean::docker] ignored, docker not found"
    return
  fi

  log::info "[$(timestamp)][clean::docker] starting clean ..."

  # clean stopped containers
  log::info "[$(timestamp)][clean::docker] clean stopped containers ..."
  docker container prune -f # >>/dev/null 2>&1

  # clean stopped images
  log::info "[$(timestamp)][clean::docker] clean stopped images ..."
  docker image prune -a -f # >>/dev/null 2>&1
  # docker rmi $(docker images -qf "dangling=true") >>/dev/null 2>&1

  # clean stopped volumes
  log::info "[$(timestamp)][clean::docker] clean stopped volumes ..."
  docker volume prune >>/dev/null # 2>&1

  # https://blog.csdn.net/haohaoxuexiyai/article/details/111244328
  docker system prune -f -a

  log::success "[$(timestamp)][clean::docker] clean done"
}

# clean::node_modules cleans node_modules
# reference: https://stackoverflow.com/questions/21122342/how-to-clean-node-modules-folder-of-packages-that-are-not-in-package-json
clean::node_modules() {
  local current_dir=$1
  if [ -z "$current_dir" ]; then
    current_dir=$PWD
  fi

  log::info "[$(timestamp)][clean::node_modules] starting clean (current dir: $current_dir) ..."

  # find $current_dir -name 'node_modules' -type d -prune -print -exec rm -rf '{}' \;
  find $current_dir \
    -name 'node_modules' \
    -type d \
    -prune \
    -print \
    -exec rm -rf '{}' \;

  log::success "[$(timestamp)][clean::node_modules] clean done"
}

# clean::nodejs cleans nodejs cache, like node_modules
clean::nodejs() {
  log::info "[$(timestamp)][clean::nodejs] starting clean ..."

  clean::node_modules

  log::success "[$(timestamp)][clean::nodejs] clean done"
}

# clean::all cleans all
clean::all() {
  clean::docker
  clean::nodejs
}

export -f clean::docker
export -f clean::node_modules

export -f clean::nodejs

export -f clean::all
