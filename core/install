#!/bin/bash

# install::dmg installs mac dmg format package.
# install::dmg@usage <dmg_path> <package_name> <app_name> [mount_path]
# install::dmg@example:
#    install::dmg $PWD/tmp/MiaoYan.dmg 妙言 MiaoYan.app
install::dmg() {
  local dmg_path=$1
  local package_name=$2
  local app_name=$3
  #
  local mount_path=$4
  if [ -z "$mount_path" ]; then
    mount_path="/Volumes/$package_name"
  fi

  if [ -z "$dmg_path" ]; then
    log::error "[install::dmg] dmg path is required"
    return 1
  fi

  if [ -z "$package_name" ]; then
    log::error "[install::dmg] package name is required"
    return 1
  fi

  if [ -z "$app_name" ]; then
    log::error "[install::dmg] app name is required"
    return 1
  fi

  if [ -d "$mount_path" ]; then
    hdiutil unmount "$mount_path" >>/dev/null
    if [ "$?" != "0" ]; then
      log::error "[install::dmg] failed to unmount old dmg."
      return 1
    fi
  fi

  # hdiutil attach $dmg_path
  hdiutil mount $dmg_path
  if [ "$?" != "0" ]; then
    log::error "[install::dmg] failed to attach dmg ..."
    return 1
  fi

  if [ ! -d "$mount_path" ]; then
    log::error "[install::dmg] invalid package name"
    return 1
  fi

  local app_path="$mount_path/$app_name"
  if [ ! -d "$app_path" ]; then
    log::error "[install::dmg] invalid app name (${app_name})"
    return 1
  fi

  log::info "[install::dmg] \"$app_path\" => /Applications/"
  cp -rf "$app_path" /Applications/
  if [ "$?" != "0" ]; then
    log::error "[install::dmg] failed to copy app to /Applications/ ."
    log::error "[install::dmg] if Operation not permitted, "
    log::error "try:"
    log::error " method 1: sudo spctl --master-disable"
    log::error " method 2: System Preferences => Security & Privacy => Privacy => Full Disk Access => add Your App, offen: Terminal / iTerm2"
    return 1
  fi

  # hdiutil detach $dmg_path
  hdiutil unmount "$mount_path" >>/dev/null
  if [ "$?" != "0" ]; then
    log::error "[install::dmg] failed to unmount dmg."
    return 1
  fi

  log::success "[install::dmg] succeed to install ${package_name}."
}

# install::pkg installs mac pkg format package.
# install::pkg@usage <pkg_path> <package_name>
# install::pkg@example:
#    install::pkg $PWD/tmp/MiaoYan.pkg 妙言
install::pkg() {
  local pkg_path=$1
  local package_name=$2

  if [ -z "$pkg_path" ]; then
    log::error "[install::pkg] pkg path is required"
    return 1
  fi

  if [ -z "$package_name" ]; then
    package_name=$pkg_path
  fi

  sudo installer -pkg $pkg_path -target /Applications
  if [ "$?" != "0" ]; then
    log::error "[install::pkg] failed to install pkg ..."
    return 1
  fi

  log::success "[install::pkg] succeed to install ${package_name}."
}

# install::zip installs the zip format package.
# install::zip@usage <zip_path> <package_name>
# install::zip@example:
#    install::zip $PWD/tmp/iTerm2-3_4_19.zip iTerm2 iTerm.app
#    install::zip $PWD/tmp/VSCode-darwin-universal.zip VSCode "Visual\ Studio\ Code.app"
install::zip() {
  local zip_path=$1
  local package_name=$2
  local app_name=$3

  if [ -z "$zip_path" ]; then
    log::error "[install::zip] zip path is required"
    return 1
  fi

  if [ -z "$package_name" ]; then
    log::error "[install::zip] package name is required"
    return 1
  fi

  if [ -z "$app_name" ]; then
    log::error "[install::zip] app name is required"
    return 1
  fi

  local system_app_path="/Applications/$app_name"
  # if [ -d "$system_app_path" ]; then
  #   log::error "[install::zip] system application ${app_name} already exists"
  #   return 1
  # fi

  local tmp_dir=$(os::tmp_dir)
  local tmp_error_file=$(os::tmp_file)

  log::info "[install::zip] creating tmp dir ${tmp_dir} ..."
  mkdir -p $tmp_dir

  log::info "[install::zip] go to tmp context ..."
  cd $tmp_dir

  log::info "[install::zip] extract zip $zip_path ..."
  os::unzip -xo "$zip_path" >>/dev/null 2>$tmp_error_file
  if [ "$?" != "0" ]; then
    log::error "[install::zip] failed to extract file type(zip): $zip_path."
    log::error "[install::zip] error detail: $(cat $tmp_error_file)"
    return 1
  fi

  # os::install $source_bin_file $target_bin_dir $target_bin_name >>/dev/null 2>$tmp_error_file
  cp -rf "$app_name" /Applications
  if [ "$?" != "0" ]; then
    log::error "[install::zip] failed to install $target_bin_name."
    log::error "[install::zip] error detail: $(cat $tmp_error_file)"
    return 1
  fi

  log::info "[install::zip] clear tmp dir ..."
  rm -rf $tmp_dir >>/dev/null 2>$tmp_error_file
  if [ "$?" != "0" ]; then
    log::error "[install::zip] failed to remove tmp dir: $(cat $tmp_error_file)"
    return 1
  fi

  log::success "[install::zip] succeed to install ${package_name}."
}

export -f install::dmg
export -f install::pkg
export -f install::zip
