#!/bin/bash

function test_lock::request() {
  local name="test_lock_request"

  # release
  lock::release $name

  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "0" \
    "$(ls /tmp | grep "zmicro.lock.${name}" | wc -l)"

  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "true" \
    "$(lock::request $name 3600)"

  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "1" \
    "$(ls /tmp | grep "zmicro.lock.${name}" | wc -l)"

  # release
  lock::release $name

  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "0" \
    "$(ls /tmp | grep "zmicro.lock.${name}" | wc -l)"
}

function test_lock::clean() {
  # clean
  lock::clean

  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "0" \
    "$(ls /tmp | grep "zmicro.lock." | wc -l)"

  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "true" \
    "$(lock::request test_lock_clean_1 3600)"

  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "true" \
    "$(lock::request test_lock_clean_2 3600)"

  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "true" \
    "$(lock::request test_lock_clean_3 3600)"

  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "3" \
    "$(ls /tmp | grep "zmicro.lock.${name}" | wc -l)"

  # clean
  lock::clean

  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "0" \
    "$(ls /tmp | grep "zmicro.lock." | wc -l)"
}
