#!/bin/bash

function test_os_home() {
  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "$HOME" \
    "$(os::homedir)"
}

function test_os_username() {
  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "$USER" \
    "$(os::username)"
}

function test_os::support_method() {
  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "true" \
    "$(os::support_method os::homedir)"

  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "false" \
    "$(os::support_method unkown_method_or_not_system_function)"
}

function test_os::encode_uri_component() {
  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "https%3a%2f%2fstackoverflow.com%2fquestions%2f296536%2fhow-to-urlencode-data-for-curl-command" \
    "$(os::encode_uri_component https://stackoverflow.com/questions/296536/how-to-urlencode-data-for-curl-command)"
}

function test_os::base64_encode() {
  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "dGVzdA==" \
    "$(os::base64_encode test)"
}

function test_os::base64_decode() {
  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "test" \
    "$(os::base64_decode dGVzdA==)"
}

function test_os::gzfetch() {
  os::gzfetch --help >> /dev/null

  local received=$(os::gzfetch get https://httpbin.zcorky.com/ | awk '{print $1}')

  testing::expect \
    "${FUNCNAME[0]}" \
    "to_equal" \
    "hello," \
    "$received"
}

# @TODO cannot works at GitHub Action(macOS-latest)
#   issue: /usr/local/lib/zmicro/commands/_internal/test: eval: line 10: syntax error near unexpected token `('
#
# function test_os::md5() {
#   testing::expect \
#     "${FUNCNAME[0]}" \
#     "to_equal" \
#     "098f6bcd4621d373cade4e832627b4f6" \
#     "$(os::md5 test)"
# }

function test_os::is_file_type_tar_gz() {
  testing::expect \
    "${FUNCNAME[0]} abc.tar.gz" \
    "to_equal" \
    "true" \
    "$(os::is_file_type_tar_gz abc.tar.gz)"

  testing::expect \
    "${FUNCNAME[0]} /path/to/abc.tar.gz" \
    "to_equal" \
    "true" \
    "$(os::is_file_type_tar_gz /path/to/abc.tar.gz)"

  testing::expect \
    "${FUNCNAME[0]} abc.zip" \
    "to_equal" \
    "false" \
    "$(os::is_file_type_tar_gz abc.zip)"
}

function test_os::is_file_type_zip() {
  testing::expect \
    "${FUNCNAME[0]} abc.zip" \
    "to_equal" \
    "true" \
    "$(os::is_file_type_zip abc.zip)"

  testing::expect \
    "${FUNCNAME[0]} /path/to/abc.zip" \
    "to_equal" \
    "true" \
    "$(os::is_file_type_zip /path/to/abc.zip)"

  testing::expect \
    "${FUNCNAME[0]} abc.tar.gz" \
    "to_equal" \
    "false" \
    "$(os::is_file_type_zip abc.tar.gz)"
}
