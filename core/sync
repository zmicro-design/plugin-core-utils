#!/bin/bash

# sync::docker_image syncs docker images
#   principle:
#     docker hub => thirdparty docker registry => pull from the docker registry
#     official => private => pull from private
#  example:
#    sync::docker_image whatwewant/zmicro:v1 registry.example.com root@remote
#    sync::docker_image whatwewant/zmicro:v1 registry.workspace.com workpace_xxx
sync::docker_image() {
  local name=$1
  local private_registry=$2
  local remote=$3

  local base_registry="docker.io"

  if [ -z "$name" ]; then
    log::error "[sync::docker_image] image name is required"
    return 1
  fi

  if [ -z "$private_registry" ]; then
    log::error "[sync::docker_image] image registry is required"
    return 1
  fi

  if [ -z "$remote" ]; then
    log::error "[sync::docker_image] remote server is required"
    return 1
  fi

  local parts=$(string::split / $name)
  if [ "$(array::length $parts)" = "3" ]; then
    base_registry=$(array::first_element $parts)
    name=$(echo $name | awk -F "${base_registry}/" '{print $2}')
  fi

  # log::info "[sync::docker_image][remote] pull from docker hub ..."
  # ssh $remote docker pull $name

  # log::info "[sync::docker_image][remote] create registry tag ..."
  # ssh $remote docker tag $name $private_registry/$name

  # log::info "[sync::docker_image][remote] push to private registry ($private_registry) ..."
  # ssh $remote docker push $private_registry/$name

  log::info "[sync::docker_image][remote] sync ${base_registry} => private registry ($private_registry) ..."
  ssh $remote <<EOF
  echo "[sync::docker_image][remote] pull from docker hub ..."
  docker pull $base_registry/$name

  echo "[sync::docker_image][remote] create registry tag ..."
  docker tag $base_registry/$name $private_registry/$name

  echo "[sync::docker_image][remote] push to private registry ($private_registry) ..."
  docker push $private_registry/$name
EOF
  if [ "$?" != "0" ]; then
    log::error "[sync::docker_image] failed to sync ${base_registry} => private registry ($private_registry) ."
    return 1
  fi

  log::info "[sync::docker_image][remote] sync private registry ($private_registry) => local ..."

  log::info "[sync::docker_image][remote] pull from private registry ($private_registry) ..."
  docker pull $private_registry/$name
  if [ "$?" != "0" ]; then
    log::error "[sync::docker_image] failed to pull from private registry ($private_registry)."
    return 1
  fi

  log::info "[sync::docker_image][remote] reset tag from $private_registry/$name to $base_registry/$name ..."
  docker tag $private_registry/$name $base_registry/$name
  if [ "$?" != "0" ]; then
    log::error "[sync::docker_image] failed to reset tag."
    return 1
  fi
}

export -f sync::docker_image
